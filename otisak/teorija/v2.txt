Referenca ili upućivač u programskom jeziku C++ je alternativno ime za neki podatak
Reference nisu podaci; reference ne zauzimaju prostor u memoriji, pa se ne može tražiti njihova adresa
Reference se pridružuju nekom podatku koji se već nalazi u memoriji (na nekoj adresi)
Ne postoje pokazivači na reference; ne postoje nizovi referenci
Prilikom definisanja reference moraju da se inicijalizuju nekim podatkom koji se već nalazi na nekoj adresi u memoriji
Reference ne mogu da promene vrednost; sve izvršene operacije nad referencama deluju na originalne podatke
Definisanje reference: int x=5; int &rx=x;

Reference služe da bi se izbeglo korišćenje pokazivača; reference su slične pokazivačima, ali postoje određene razlike
Sličnosti:
	- referenca je adresa, a vrednost pokazivača je isto adresa
Razlike:
	- referenca je čvrsto vezana za podatak, dok vrednost pokazivača nije čvrsto vezana za podatak (pokazivač može da menja vrednosti, referenca ne)
	- kod svakog pominjanja reference podrazumeva se posredan pristup podatku na kojeg upućuje, a kod pokazivača je potrebno koristiti operator za indirektno adresiranje *
	- pokazivači jesu pravi podaci, reference nisu podaci

U programskom jeziku C++ dodeljena su nova značenja operatorima << i >> (ulaz/izlaz podataka)
Značenje je ostalo isto ako su oba operanda celobrojne vrednosti; značenje je promenjeno ukoliko je prvi operand referenca na tekstualnu datoteku
cin - referenca na glavni ulaz računara (obično je to tastatura)
cout - referenca na glavni izlaz računara (obično je to ekran)
Za ove manipulacije se koristi zaglavlje <iostream> (#include <iostream>)

U C++ postoji mogućnost da se u definiciji funkcije navedu podrazumevane vrednosti formalnih argumenata
Kada u pozivu tako napisane funkcije nedostaju stvarni argumenti, onda se koriste podrazumevane vrednosti
Ako se u listi argumenata za neki argument želi navesti podrazumevana vrednost, onda je potrebno navesti podrazumevane vrednosti i za sve argumente posle njega
	void f(int x, int y=3, int z=4) {...}

U C++ postoji mehanizam preklapanja imena funkcija
Više funkcija može da ima isto ime, ali se one moraju razlikovati po broju i/ili tipovima argumenata
Tako se obezbeđuje njihova jednoznačna identifikacija
Tipovi funkcija sa istim imenom mogu biti isti

Imenski prostori (namespace) služe za grupisanje globalnih imena u velikim programskim sistemima
Ako se delovi programa stave u različite imenske prostore, tada ne može doći do konflikta sa korišćenjem imena
Identifikatori unutar nekog imenskog prostora mogu da se dohvate iz bilo kog dela programa pomoću operatora za razrešenje dosega (::)
Takođe, identifikatori iz nekog imenskog prostora mogu da se uvezu naredbom using (2 načina):
using Imenski_prostor::identifikator;
using namespace Imenski_prostor;

Po standardu C++ predviđeno je da sva standardna zaglavlja sve globalne identifikatore stavljaju u imenski prostor std
Standardom je predviđeno da standardna zaglavlja ne budu u vidu tekstualnih datoteka
Zato zaglavlje iostream nema nastavak .h (u C-u ima nastavak .h)
	#include <iostream>
	using namespace std;
Ukoliko ne uključimo imenski prostor std za ispis promenljive x moramo pisati
	std::cout<<x;
Ukoliko uključimo imenski prostor std za ispis promenljive x je dovoljno napisati
	cout<<x;

Obrada programa u C++ obuhvata sledeće faze:
	- unošenje izvornog teksta programa i dobijanje .cpp datoteka
	- prevođenje (kompajliranje) i dobijanje .obj datoteka
	- povezivanje prevedenih datoteka u jednu izvršnu datoteku .exe
Pretprocesiranje podrazumeva određene obrade izvornog teksta pre početka prevođenja
Pretprocesirskim direktivama se može postići sledeće:
	- zamena identifikatora sa nizom simbola u programu sa direktivom #define
	- umetanje sadržaja datoteke sa direktivom #include
	- uslovno prevođenje delova programa uz #ifndef identifikator

Zaglavlje (header) je .hpp datoteka u kojoj se nalaze razne deklarativne naredbe
Zaglavlja se pretprocesorskom direktivom #include uključuje u izvorni program (.cpp datoteku)
Da bi se sprečilo višestruko prevođenje sadržaja datoteke u toku jednog prevođenja, preporučuje se da se na početku .hpp fajla stavi ono #ifndef i #endif na kraj

Glavni program je funkcija main() i po Standardu bi trebalo da bude tipa int
